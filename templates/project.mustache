name: {{project_name}}

options:
  createIntermediateGroups: true
  xcodeVersion: 12.2
  usesTabs: false
  indentWidth: 4
  deploymentTarget:
    iOS: "{{deployment_target}}"

configs:
  AppStore: release
  Release: release
  Debug: debug

packages:
  TICoordinatorKit:
    url: https://github.com/TouchInstinct/TICoordinatorKit
    version: 1.1.6
  LeadKit:
    url: https://github.com/TouchInstinct/LeadKit
    version: 1.4.0
  SnapKit:
    url: https://github.com/SnapKit/SnapKit
    version: 5.0.1

targets:
  {{project_name}}:
    dependencies:
      - package: LeadKit
        product: TISwiftUtils
      - package: LeadKit
        product: TIFoundationUtils
      - package: LeadKit
        product: TIKeychainUtils
      - package: LeadKit
        product: TIUIKitCore
      - package: LeadKit
        product: TIUIElements
      - package: LeadKit
        product: TITableKitUtils
    settings:
      base:
        SWIFT_VERSION: 5.0
        SWIFT_SWIFT3_OBJC_INFERENCE: On
        CODE_SIGN_STYLE: Manual
      configs:
        Debug:
          PRODUCT_BUNDLE_IDENTIFIER: ru.touchin.{{project_name_lowecased}}
          GOOGLE_SERVICE_INFO_PLIST_PATH: $(SRCROOT)/$(TARGET_NAME)/Resources/Standard-GoogleService-Info.plist
        Release:
          PRODUCT_BUNDLE_IDENTIFIER: com.touchin.{{project_name_lowecased}}
          GOOGLE_SERVICE_INFO_PLIST_PATH: $(SRCROOT)/$(TARGET_NAME)/Resources/Enterprise-GoogleService-Info.plist
        AppStore:
          PRODUCT_BUNDLE_IDENTIFIER: com.touchin.{{project_name_lowecased}}
          GOOGLE_SERVICE_INFO_PLIST_PATH: $(SRCROOT)/$(TARGET_NAME)/Resources/AppStore-GoogleService-Info.plist
    type: application
    platform: iOS
    sources:
      - path: {{project_name}}
        excludes:
          - "Resources/LaunchScreen.storyboard"
          - "Resources/Assets.xcassets/AppIcon.appiconset/Contents.json"
          - "Info.plist"
      - path: {{project_name}}/Analytics
        buildPhase: sources
      - path: {{project_name}}/Cells
        buildPhase: sources
      - path: {{project_name}}/Controllers
        buildPhase: sources
      - path: {{project_name}}/Extensions
        buildPhase: sources
      - path: Generated
        buildPhase: sources
      - path: {{project_name}}/Networking
        buildPhase: sources
      - path: {{project_name}}/Protocols
        buildPhase: sources
      - path: {{project_name}}/Resources
        buildPhase: resources
      - path: {{project_name}}/Resources/Localization
        buildPhase: resources
      - path: {{project_name}}/Services
        buildPhase: sources
      - path: {{project_name}}/Views
        buildPhase: sources

aggregateTargets:
  CodeGen:
    buildScripts:
      - name: Localization
        script: |
          readonly PRODUCT_NAME="{{project_name}}"
          . build-scripts/xcode/build_phases/localization.sh
        inputFiles:
        - $(SRCROOT)/common/strings/default_common_strings_ru.json

      - name: API Generator
        script: #. build-scripts/xcode/build_phases/api_generator.sh 1.4.0-alpha3 {{project_name}}/Generated

      - name: License List
        script: |
          readonly PODS_ROOT="${SRCROOT}/Pods"
          ${PODS_ROOT}/LicensePlist/license-plist --output-path Resources/LicenseList --prefix Licenses --suppress-opening-directory

  CodeLint:
    buildScripts:
      - name: Check Pods Manifest.lock
        script: |
          readonly PODS_ROOT="${SRCROOT}/Pods"
          . ${SRCROOT}/build_phases/check_pods_manifest.sh
        inputFiles:
          - ${SRCROOT}/Podfile.lock
          - ${PODS_ROOT}/Manifest.lock
        outputFiles:
          - $(DERIVED_FILE_DIR)/Pods-Ubrd-checkManifestLockResult.txt

      - name: Swiftlint
        script: |
          readonly PODS_ROOT="${SRCROOT}/Pods"
          readonly SCRIPT_DIR="${SRCROOT}/build-scripts/xcode/build_phases"
          . ${SCRIPT_DIR}/swiftlint.sh
        inputFileLists:
          - $(SRCROOT)/build_phases/code_lint_folders.xcfilelist

      - name: CopyPaste Detection
        script: |
          readonly SCRIPT_DIR="${SRCROOT}/build-scripts/xcode/build_phases"
          . build-scripts/xcode/build_phases/copy_paste_detection.sh Localization Generated Pods
        inputFileLists:
          - $(SRCROOT)/build_phases/code_lint_folders.xcfilelist

  UnusedDetection:
    buildScripts:
      - name: UnusedCode Detection
        script: . build-scripts/xcode/build_phases/unused.sh

schemes:
  {{project_name}}:
    build:
      targets:
        {{project_name}}: all

  CodeGen:
    build:
      targets:
        CodeGen: [run, archive]

  CodeLint:
    build:
      targets:
        CodeLint: [analyze]

  UnusedDetection:
    build:
      targets:
        UnusedDetection: [analyze]
